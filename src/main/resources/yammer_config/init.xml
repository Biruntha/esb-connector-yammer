<template name="init" xmlns="http://ws.apache.org/ns/synapse">
    <!--
 ~ Copyright (c) 2016 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~ Licensed under the Apache License, Version 2.0 (the "License");
 ~ you may not use this file except in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~      http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing, software
 ~ distributed under the License is distributed on an "AS IS" BASIS,
 ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ~ See the License for the specific language governing permissions and
 ~ limitations under the License.
-->
    <parameter name="apiToken" description="The api token of the account."/>
    <parameter name="apiUrl" description="The url to access the Yammer API."/>
    <parameter name="responseType" description="The response type of the method call."/>

    <sequence>
        <property name="uri.var.apiToken" expression="$func:apiToken"/>
        <property name="uri.var.apiUrl" expression="$func:apiUrl"/>
        <property name="uri.var.responseType" expression="$func:responseType"/>

        <property name="Authorization"
                  expression="fn:concat('Bearer ', get-property('uri.var.apiToken'))"
                  scope="transport"
                  type="STRING"/>

        <!-- If the apiUrl is not specified, set the default value as https://www.yammer.com/api/v1 -->
        <filter source="boolean(get-property('uri.var.apiUrl'))" regex="false">
            <then>
                <property name="uri.var.apiUrl" value="https://www.yammer.com/api/v1"/>
            </then>
            <else>
                <property name="uri.var.apiUrl"
                          expression="fn:concat(get-property('uri.var.apiUrl'), '/api/v1')"/>
            </else>
        </filter>

        <!-- If the responseType type is not specified as xml, set the default value as application/json -->
        <filter source="get-property('uri.var.responseType')" regex="xml">
            <then>
                <property name="uri.var.responseType" value="xml"/>
            </then>
            <else>
                <property name="uri.var.responseType" value="json"/>
            </else>
        </filter>

    </sequence>
</template>
