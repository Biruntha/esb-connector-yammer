<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~ Copyright (c) 2016 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~ Licensed under the Apache License, Version 2.0 (the "License");
 ~ you may not use this file except in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~      http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing, software
 ~ distributed under the License is distributed on an "AS IS" BASIS,
 ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ~ See the License for the specific language governing permissions and
 ~ limitations under the License.
-->
<proxy xmlns="http://ws.apache.org/ns/synapse"
       name="yammer"
       transports="https,http"
       statistics="disable"
       trace="disable"
       startOnLoad="true">
    <target>
        <inSequence>
            <property name="apiUrl" expression="json-eval($.apiUrl)"/>
            <property name="apiToken" expression="json-eval($.apiToken)"/>
            <property name="responseType" expression="json-eval($.responseType)"/>
            <property name="messageBody" expression="json-eval($.messageBody)"/>
            <property name="olderThan" expression="json-eval($.olderThan)"/>
            <property name="newerThan" expression="json-eval($.newerThan)"/>
            <property name="threaded" expression="json-eval($.threaded)"/>
            <property name="limit" expression="json-eval($.limit)"/>
            <property name="messageId" expression="json-eval($.messageId)"/>
            <property name="userId" expression="json-eval($.userId)"/>
            <property name="groupId" expression="json-eval($.groupId)"/>
            <property name="topicId" expression="json-eval($.topicId)"/>
            <property name="threadId" expression="json-eval($.threadId)"/>
            <property name="type" expression="json-eval($.type)"/>
            <property name="email" expression="json-eval($.email)"/>
            <property name="targetType" expression="json-eval($.targetType)"/>
            <property name="targetId" expression="json-eval($.targetId)"/>
            <property name="search" expression="json-eval($.search)"/>
            <property name="page" expression="json-eval($.page)"/>
            <property name="numPerPage" expression="json-eval($.numPerPage)"/>
            <property name="prefix" expression="json-eval($.prefix)"/>
            <property name="models" expression="json-eval($.models)"/>
            <property name="includeSuspended" expression="json-eval($.includeSuspended)"/>
            <property name="excludeOwnMessagesFromUnseen"
                      expression="json-eval($.excludeOwnMessagesFromUnseen)"/>
            <property name="sortBy" expression="json-eval($.sortBy)"/>
            <property name="reverse" expression="json-eval($.reverse)"/>
            <property name="letter" expression="json-eval($.letter)"/>
            <yammer.init>
                <apiUrl>{$ctx:apiUrl}</apiUrl>
                <apiToken>{$ctx:apiToken}</apiToken>
                <responseType>{$ctx:responseType}</responseType>
            </yammer.init>
            <switch source="get-property('transport', 'Action')">
                <case regex="urn:getAlgorithmicFeed">
                    <yammer.getAlgorithmicFeed>
                        <olderThan>{$ctx:olderThan}</olderThan>
                        <newerThan>{$ctx:newerThan}</newerThan>
                        <threaded>{$ctx:threaded}</threaded>
                        <limit>{$ctx:limit}</limit>
                    </yammer.getAlgorithmicFeed>
                </case>
                <case regex="urn:getFollowing">
                    <yammer.getFollowing>
                        <olderThan>{$ctx:olderThan}</olderThan>
                        <newerThan>{$ctx:newerThan}</newerThan>
                        <threaded>{$ctx:threaded}</threaded>
                        <limit>{$ctx:limit}</limit>
                    </yammer.getFollowing>
                </case>
                <case regex="urn:getMessages">
                    <yammer.getMessages>
                        <olderThan>{$ctx:olderThan}</olderThan>
                        <newerThan>{$ctx:newerThan}</newerThan>
                        <threaded>{$ctx:threaded}</threaded>
                        <limit>{$ctx:limit}</limit>
                    </yammer.getMessages>
                </case>
                <case regex="urn:getMyFeed">
                    <yammer.getMyFeed>
                        <olderThan>{$ctx:olderThan}</olderThan>
                        <newerThan>{$ctx:newerThan}</newerThan>
                        <threaded>{$ctx:threaded}</threaded>
                        <limit>{$ctx:limit}</limit>
                    </yammer.getMyFeed>
                </case>
                <case regex="urn:getSentMessages">
                    <yammer.getSentMessages>
                        <olderThan>{$ctx:olderThan}</olderThan>
                        <newerThan>{$ctx:newerThan}</newerThan>
                        <threaded>{$ctx:threaded}</threaded>
                        <limit>{$ctx:limit}</limit>
                    </yammer.getSentMessages>
                </case>
                <case regex="urn:getPrivateMessages">
                    <yammer.getPrivateMessages>
                        <olderThan>{$ctx:olderThan}</olderThan>
                        <newerThan>{$ctx:newerThan}</newerThan>
                        <threaded>{$ctx:threaded}</threaded>
                        <limit>{$ctx:limit}</limit>
                    </yammer.getPrivateMessages>
                </case>
                <case regex="urn:getReceivedMessages">
                    <yammer.getReceivedMessages>
                        <olderThan>{$ctx:olderThan}</olderThan>
                        <newerThan>{$ctx:newerThan}</newerThan>
                        <threaded>{$ctx:threaded}</threaded>
                        <limit>{$ctx:limit}</limit>
                    </yammer.getReceivedMessages>
                </case>
                <case regex="urn:postLike">
                    <yammer.postLike>
                        <messageId>{$ctx:messageId}</messageId>
                    </yammer.postLike>
                </case>
                <case regex="urn:removeLike">
                    <yammer.removeLike>
                        <messageId>{$ctx:messageId}</messageId>
                    </yammer.removeLike>
                </case>
                <case regex="urn:sendMessageToEmail">
                    <yammer.sendMessageToEmail>
                        <messageId>{$ctx:messageId}</messageId>
                    </yammer.sendMessageToEmail>
                </case>
                <case regex="urn:getUsers">
                    <yammer.getUsers>
                        <page>{$ctx:page}</page>
                        <letter>{$ctx:letter}</letter>
                        <sortBy>{$ctx:sortBy}</sortBy>
                        <reverse>{$ctx:reverse}</reverse>
                    </yammer.getUsers>
                </case>
                <case regex="urn:getCurrentUser">
                    <yammer.getCurrentUser/>
                </case>
                <case regex="urn:getAboutAUser">
                    <yammer.getAboutAUser>
                        <userId>{$ctx:userId}</userId>
                    </yammer.getAboutAUser>
                </case>
                <case regex="urn:getByEmail">
                    <yammer.getByEmail>
                        <email>{$ctx:email}</email>
                    </yammer.getByEmail>
                </case>
                <case regex="urn:getByGroup">
                    <yammer.getByGroup>
                        <groupId>{$ctx:groupId}</groupId>
                        <page>{$ctx:page}</page>
                    </yammer.getByGroup>
                </case>
                <case regex="urn:getTopicById">
                    <yammer.getTopicById>
                        <topicId>{$ctx:topicId}</topicId>
                    </yammer.getTopicById>
                </case>
                <case regex="urn:getMessageById">
                    <yammer.getMessageById>
                        <topicId>{$ctx:topicId}</topicId>
                    </yammer.getMessageById>
                </case>
                <case regex="urn:getThread">
                    <yammer.getThread>
                        <threadId>{$ctx:threadId}</threadId>
                    </yammer.getThread>
                </case>
                <case regex="urn:getSuggestion">
                    <yammer.getSuggestion>
                        <limit>{$ctx:limit}</limit>
                    </yammer.getSuggestion>
                </case>
                <case regex="urn:addRelationship">
                    <yammer.addRelationship>
                        <type>{$ctx:type}</type>
                        <email>{$ctx:email}</email>
                        <userId>{$ctx:userId}</userId>
                    </yammer.addRelationship>
                </case>
                <case regex="urn:getRelationship">
                    <yammer.getRelationship>
                        <userId>{$ctx:userId}</userId>
                    </yammer.getRelationship>
                </case>
                <case regex="urn:deleteRelationship">
                    <yammer.deleteRelationship>
                        <userId>{$ctx:userId}</userId>
                        <type>{$ctx:type}</type>
                    </yammer.deleteRelationship>
                </case>
                <case regex="urn:joinGroup">
                    <yammer.joinGroup>
                        <groupId>{$ctx:groupId}</groupId>
                    </yammer.joinGroup>
                </case>
                <case regex="urn:leaveGroup">
                    <yammer.leaveGroup>
                        <groupId>{$ctx:groupId}</groupId>
                    </yammer.leaveGroup>
                </case>
                <case regex="urn:addSubscription">
                    <yammer.addSubscription>
                        <targetType>{$ctx:targetType}</targetType>
                        <targetId>{$ctx:targetId}</targetId>
                    </yammer.addSubscription>
                </case>
                <case regex="urn:getSubTopic">
                    <yammer.getSubTopic>
                        <topicId>{$ctx:topicId}</topicId>
                    </yammer.getSubTopic>
                </case>
                <case regex="urn:sendInvitation">
                    <yammer.sendInvitation>
                        <email>{$ctx:email}</email>
                    </yammer.sendInvitation>
                </case>
                <case regex="urn:getNotification">
                    <yammer.getNotification/>
                </case>
                <case regex="urn:getSearch">
                    <yammer.getSearch>
                        <search>{$ctx:search}</search>
                        <page>{$ctx:page}</page>
                        <numPerPage>{$ctx:numPerPage}</numPerPage>
                    </yammer.getSearch>
                </case>
                <case regex="urn:getAutocomplete">
                    <yammer.getAutocomplete>
                        <prefix>{$ctx:prefix}</prefix>
                        <models>{$ctx:models}</models>
                    </yammer.getAutocomplete>
                </case>
                <case regex="urn:getNetwork">
                    <yammer.getNetwork>
                        <includeSuspended>{$ctx:includeSuspended}</includeSuspended>
                        <excludeOwnMessagesFromUnseen>{$ctx:excludeOwnMessagesFromUnseen}
                        </excludeOwnMessagesFromUnseen>
                    </yammer.getNetwork>
                </case>
                <case regex="urn:getSubUser">
                    <yammer.getSubUser>
                        <userId>{$ctx:userId}</userId>
                    </yammer.getSubUser>
                </case>
                <case regex="urn:getSubThread">
                    <yammer.getSubThread>
                        <threadId>{$ctx:threadId}</threadId>
                    </yammer.getSubThread>
                </case>
                <case regex="urn:deleteSubscription">
                    <yammer.deleteSubscription>
                        <targetType>{$ctx:targetType}</targetType>
                        <targetId>{$ctx:targetId}</targetId>
                    </yammer.deleteSubscription>
                </case>
                <case regex="urn:deleteMessage">
                    <yammer.deleteMessage>
                        <messageId>{$ctx:messageId}</messageId>
                    </yammer.deleteMessage>
                </case>
            </switch>
            <respond/>
        </inSequence>
        <outSequence>
            <log/>
            <send/>
        </outSequence>
    </target>
    <description/>
</proxy>
                                